/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.compomics.coss.View;

import java.awt.Toolkit;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Genet
 */
public class SettingsView extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    public SettingsView() {
        initComponents();
        this.setTitle("COSS - Settings");
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/main/resources/similarityIcon.png"));
    }
    
    public JButton getBtnSave(){
        return btnSave;
    }
    
     public JTextField getTxtTargetSpectra()
    {
        return txtTargetSpectra;
    }
    
    public JTextField getTxtDBSpectra()
    {
        return txtDBSpectra;
    }
    public JTextField getTxtFragmentTolerance()
    {
        return txtFragmentTolerance;
    }
    public JTextField getTxtPrecursorTolerance()
    {
        return txtPrecursorTolerance;
    }
    public JTextField getTxtPrecursorCharge()
    {
        return txtPrecursorCharge;
    }
    public JTextField getTxtCutOff()
    {
        return txtCutOff;
    }

    public JCheckBox getChkFilter()
    {
        return chkFilter;
    }
    
    public JCheckBox getChkRemovePrecursor()
    {
        return chkRemovePrecursor;
    }
    public JCheckBox getChkTransform()
    {
        return chkTransform;
    }
    public JComboBox getCmbAlgorithmType()
    {
        return cmbAlgorithmType;
    }
    public JComboBox getCmbTransformType()
    {
        return cmbTransformType;
    }
  
    public JButton getBtnStartSearching()
    {
        return btnStartSearching;
    }
    public JButton getBtnTargetSpectra()
    {
        return btnTargetSpectra;
    }
    public JButton getBtnDBSpectra()
    {
        return btnDBSpectra;
    }
    
    
    public JLabel getlblCutoff(){
        return lblCutOff;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInput = new javax.swing.JPanel();
        lblTargetSpectra = new javax.swing.JLabel();
        txtTargetSpectra = new javax.swing.JTextField();
        txtDBSpectra = new javax.swing.JTextField();
        btnTargetSpectra = new javax.swing.JButton();
        btnDBSpectra = new javax.swing.JButton();
        lblPrecursorTolerance = new javax.swing.JLabel();
        txtPrecursorTolerance = new javax.swing.JTextField();
        txtFragmentTolerance = new javax.swing.JTextField();
        txtPrecursorCharge = new javax.swing.JTextField();
        lblDatabaseSpectra = new javax.swing.JLabel();
        lblFragmentTolerance = new javax.swing.JLabel();
        lblPrecursorCharge = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlPreprocessing = new javax.swing.JPanel();
        chkFilter = new javax.swing.JCheckBox();
        lblCutOff = new javax.swing.JLabel();
        txtCutOff = new javax.swing.JTextField();
        chkRemovePrecursor = new javax.swing.JCheckBox();
        chkTransform = new javax.swing.JCheckBox();
        cmbTransformType = new javax.swing.JComboBox<>();
        btnApplyPreprocess = new javax.swing.JButton();
        pnlMatching = new javax.swing.JPanel();
        lblAlgorithmType = new javax.swing.JLabel();
        cmbAlgorithmType = new javax.swing.JComboBox<>();
        btnStartSearching = new javax.swing.JButton();
        btnStartSearching1 = new javax.swing.JButton();
        btnStartSearching2 = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlInput.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        lblTargetSpectra.setText("Target Spectra");

        btnTargetSpectra.setText("...");

        btnDBSpectra.setText("...");

        lblPrecursorTolerance.setText("Precursor Tolerance");

        lblDatabaseSpectra.setText("Database Spectra");

        lblFragmentTolerance.setText("Fragment Tolerance");

        lblPrecursorCharge.setText("Max. Prec. Charge");

        jLabel1.setText("ppm");

        jLabel2.setText("Da");

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrecursorTolerance)
                            .addComponent(lblFragmentTolerance)
                            .addComponent(lblPrecursorCharge))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecursorCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addComponent(txtFragmentTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2))
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addComponent(txtPrecursorTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)))
                        .addGap(0, 355, Short.MAX_VALUE))
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTargetSpectra)
                            .addComponent(lblDatabaseSpectra))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDBSpectra)
                            .addComponent(txtTargetSpectra))
                        .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInputLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnTargetSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDBSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTargetSpectra)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTargetSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTargetSpectra)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDBSpectra)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDBSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDatabaseSpectra)))
                .addGap(24, 24, 24)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecursorTolerance)
                    .addComponent(txtPrecursorTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFragmentTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(lblFragmentTolerance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecursorCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrecursorCharge)))
        );

        pnlPreprocessing.setBorder(javax.swing.BorderFactory.createTitledBorder("Preprocessing Option"));
        pnlPreprocessing.setEnabled(false);

        chkFilter.setText("Filter");
        chkFilter.setEnabled(false);

        lblCutOff.setText("CutOff");
        lblCutOff.setEnabled(false);

        txtCutOff.setEnabled(false);

        chkRemovePrecursor.setText("Remove Precu.  Ion Peak");
        chkRemovePrecursor.setEnabled(false);

        chkTransform.setText("Transform");
        chkTransform.setEnabled(false);

        cmbTransformType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Log", "Square Root" }));
        cmbTransformType.setEnabled(false);

        btnApplyPreprocess.setText("Apply Preprocessing");
        btnApplyPreprocess.setEnabled(false);

        javax.swing.GroupLayout pnlPreprocessingLayout = new javax.swing.GroupLayout(pnlPreprocessing);
        pnlPreprocessing.setLayout(pnlPreprocessingLayout);
        pnlPreprocessingLayout.setHorizontalGroup(
            pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblCutOff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkFilter)
                    .addComponent(chkRemovePrecursor)
                    .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                        .addComponent(chkTransform)
                        .addGap(18, 18, 18)
                        .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnApplyPreprocess)
                            .addComponent(cmbTransformType, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(347, Short.MAX_VALUE))
        );
        pnlPreprocessingLayout.setVerticalGroup(
            pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addComponent(chkFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCutOff)
                    .addComponent(txtCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkRemovePrecursor)
                .addGap(18, 18, 18)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTransform)
                    .addComponent(cmbTransformType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnApplyPreprocess))
        );

        pnlMatching.setBorder(javax.swing.BorderFactory.createTitledBorder("Matching Algorithm"));

        lblAlgorithmType.setText("Algorithm");

        cmbAlgorithmType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MSRobin", "Comulative Binomial Probability" }));
        cmbAlgorithmType.setEnabled(false);

        javax.swing.GroupLayout pnlMatchingLayout = new javax.swing.GroupLayout(pnlMatching);
        pnlMatching.setLayout(pnlMatchingLayout);
        pnlMatchingLayout.setHorizontalGroup(
            pnlMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMatchingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAlgorithmType)
                .addGap(18, 18, 18)
                .addComponent(cmbAlgorithmType, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMatchingLayout.setVerticalGroup(
            pnlMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMatchingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlgorithmType)
                    .addComponent(cmbAlgorithmType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnStartSearching.setText("Start Searching");
        btnStartSearching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartSearchingActionPerformed(evt);
            }
        });

        btnStartSearching1.setText("Clear");
        btnStartSearching1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartSearching1ActionPerformed(evt);
            }
        });

        btnStartSearching2.setText("Cancel");
        btnStartSearching2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartSearching2ActionPerformed(evt);
            }
        });

        btnSave.setText("Save Settiing");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pnlMatching, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlPreprocessing, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(btnStartSearching)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStartSearching1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStartSearching2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlPreprocessing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlMatching, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartSearching)
                    .addComponent(btnStartSearching1)
                    .addComponent(btnStartSearching2)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartSearchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartSearchingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartSearchingActionPerformed

    private void btnStartSearching1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartSearching1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartSearching1ActionPerformed

    private void btnStartSearching2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartSearching2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartSearching2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplyPreprocess;
    private javax.swing.JButton btnDBSpectra;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnStartSearching;
    private javax.swing.JButton btnStartSearching1;
    private javax.swing.JButton btnStartSearching2;
    private javax.swing.JButton btnTargetSpectra;
    private javax.swing.JCheckBox chkFilter;
    private javax.swing.JCheckBox chkRemovePrecursor;
    private javax.swing.JCheckBox chkTransform;
    private javax.swing.JComboBox<String> cmbAlgorithmType;
    private javax.swing.JComboBox<String> cmbTransformType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAlgorithmType;
    private javax.swing.JLabel lblCutOff;
    private javax.swing.JLabel lblDatabaseSpectra;
    private javax.swing.JLabel lblFragmentTolerance;
    private javax.swing.JLabel lblPrecursorCharge;
    private javax.swing.JLabel lblPrecursorTolerance;
    private javax.swing.JLabel lblTargetSpectra;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlMatching;
    private javax.swing.JPanel pnlPreprocessing;
    private javax.swing.JTextField txtCutOff;
    private javax.swing.JTextField txtDBSpectra;
    private javax.swing.JTextField txtFragmentTolerance;
    private javax.swing.JTextField txtPrecursorCharge;
    private javax.swing.JTextField txtPrecursorTolerance;
    private javax.swing.JTextField txtTargetSpectra;
    // End of variables declaration//GEN-END:variables
}
