/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.compomics.coss.View;


import java.awt.Color;
import java.awt.Toolkit;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import org.apache.log4j.BasicConfigurator;

/**
 *
 * @author Genet
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public MainView() {
        
        initComponents();
        BasicConfigurator.configure();
        this.setLocation(400, 250);
        this.setBackground(Color.yellow);

        this.jSplitPane2.setDividerLocation(0.80);
     
        
        this.setTitle("CompOmics Spectrum Similarity Search");
        setIcon();
        
        
        
        
    }
        
    
    //<editor-fold defaultstate="collapsed" desc=" Control Getters and Setters ">

    public JList getLstTargetSpec()
    {
       return this.lstTargetSpectra;
    }
    public JPanel getSpltPanel()
    {
        return pnlSimilarityResult;
    }
    
    public JTextField getTxtTargetSpectra()
    {
        return txtTargetSpectra;
    }
    
    public JTextField getTxtDBSpectra()
    {
        return txtDBSpectra;
    }
    public JTextField getTxtFragmentTolerance()
    {
        return txtFragmentTolerance;
    }
    public JTextField getTxtPrecursorTolerance()
    {
        return txtPrecursorTolerance;
    }
    public JTextField getTxtPrecursorCharge()
    {
        return txtPrecursorCharge;
    }
    public JTextField getTxtCutOff()
    {
        return txtCutOff;
    }
    public JLabel getlblProgress()
    {
        return lblProgress;
    }

    
    public JCheckBox getChkFilter()
    {
        return chkFilter;
    }
    
    public JCheckBox getChkRemovePrecursor()
    {
        return chkRemovePrecursor;
    }
    public JCheckBox getChkTransform()
    {
        return chkTransform;
    }
    public JComboBox getCmbAlgorithmType()
    {
        return cmbAlgorithmType;
    }
    public JComboBox getCmbTransformType()
    {
        return cmbTransformType;
    }
    public JProgressBar getPrgSearchProgress()
    {
        return prgSearchProgress;
    }
    
    public JButton getBtnStartSearching()
    {
        return btnStartSearching;
    }
    public JButton getBtnTargetSpectra()
    {
        return btnTargetSpectra;
    }
    public JButton getBtnDBSpectra()
    {
        return btnDBSpectra;
    }
    
    
    public JLabel getlblCutoff(){
        return lblCutOff;
    }
    
    public JTextArea gettxtLog()
    {
        return jTextArea1;
    }
    
    public JMenuItem getMnuSaveResult()
    {
        return jMenuItem3;
    }

    //</editor-fold >
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        pnlLeft = new javax.swing.JPanel();
        pnlPreprocessing = new javax.swing.JPanel();
        chkFilter = new javax.swing.JCheckBox();
        lblCutOff = new javax.swing.JLabel();
        txtCutOff = new javax.swing.JTextField();
        chkRemovePrecursor = new javax.swing.JCheckBox();
        chkTransform = new javax.swing.JCheckBox();
        cmbTransformType = new javax.swing.JComboBox<>();
        btnApplyPreprocess = new javax.swing.JButton();
        pnlInput = new javax.swing.JPanel();
        lblTargetSpectra = new javax.swing.JLabel();
        txtTargetSpectra = new javax.swing.JTextField();
        txtDBSpectra = new javax.swing.JTextField();
        btnTargetSpectra = new javax.swing.JButton();
        btnDBSpectra = new javax.swing.JButton();
        lblPrecursorTolerance = new javax.swing.JLabel();
        txtPrecursorTolerance = new javax.swing.JTextField();
        txtFragmentTolerance = new javax.swing.JTextField();
        txtPrecursorCharge = new javax.swing.JTextField();
        lblDatabaseSpectra = new javax.swing.JLabel();
        lblFragmentTolerance = new javax.swing.JLabel();
        lblPrecursorCharge = new javax.swing.JLabel();
        pnlMatching = new javax.swing.JPanel();
        lblAlgorithmType = new javax.swing.JLabel();
        cmbAlgorithmType = new javax.swing.JComboBox<>();
        prgSearchProgress = new javax.swing.JProgressBar();
        btnStartSearching = new javax.swing.JButton();
        lblProgress = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstTargetSpectra = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        pnlSimilarityResult = new javax.swing.JPanel();
        pnllog = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setDividerSize(10);
        jSplitPane1.setToolTipText("");

        pnlPreprocessing.setBorder(javax.swing.BorderFactory.createTitledBorder("Preprocessing Option"));
        pnlPreprocessing.setEnabled(false);

        chkFilter.setText("Filter");
        chkFilter.setEnabled(false);

        lblCutOff.setText("CutOff");
        lblCutOff.setEnabled(false);

        txtCutOff.setEnabled(false);

        chkRemovePrecursor.setText("Remove Precu.  Ion Peak");
        chkRemovePrecursor.setEnabled(false);

        chkTransform.setText("Transform");
        chkTransform.setEnabled(false);

        cmbTransformType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Log", "Square Root" }));
        cmbTransformType.setEnabled(false);

        btnApplyPreprocess.setText("Apply Preprocessing");
        btnApplyPreprocess.setEnabled(false);

        javax.swing.GroupLayout pnlPreprocessingLayout = new javax.swing.GroupLayout(pnlPreprocessing);
        pnlPreprocessing.setLayout(pnlPreprocessingLayout);
        pnlPreprocessingLayout.setHorizontalGroup(
            pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblCutOff)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkFilter)
                    .addComponent(chkRemovePrecursor)
                    .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                        .addComponent(chkTransform)
                        .addGap(18, 18, 18)
                        .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnApplyPreprocess)
                            .addComponent(cmbTransformType, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPreprocessingLayout.setVerticalGroup(
            pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addComponent(chkFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCutOff)
                    .addComponent(txtCutOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkRemovePrecursor)
                .addGap(18, 18, 18)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTransform)
                    .addComponent(cmbTransformType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnApplyPreprocess))
        );

        pnlInput.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        lblTargetSpectra.setText("Target Spectra");

        btnTargetSpectra.setText("...");

        btnDBSpectra.setText("...");

        lblPrecursorTolerance.setText("Precursor Tolerance");

        lblDatabaseSpectra.setText("Database Spectra");

        lblFragmentTolerance.setText("Fragment Tolerance");

        lblPrecursorCharge.setText("Max. Prec. Charge");

        javax.swing.GroupLayout pnlInputLayout = new javax.swing.GroupLayout(pnlInput);
        pnlInput.setLayout(pnlInputLayout);
        pnlInputLayout.setHorizontalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPrecursorTolerance)
                    .addComponent(lblFragmentTolerance)
                    .addComponent(lblPrecursorCharge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrecursorCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFragmentTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecursorTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTargetSpectra)
                    .addComponent(lblDatabaseSpectra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDBSpectra)
                    .addComponent(txtTargetSpectra, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnTargetSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInputLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDBSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlInputLayout.setVerticalGroup(
            pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTargetSpectra)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTargetSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTargetSpectra)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDBSpectra)
                    .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDBSpectra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDatabaseSpectra)))
                .addGap(24, 24, 24)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecursorTolerance)
                    .addComponent(txtPrecursorTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFragmentTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFragmentTolerance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecursorCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrecursorCharge)))
        );

        pnlMatching.setBorder(javax.swing.BorderFactory.createTitledBorder("Matching Algorithm"));

        lblAlgorithmType.setText("Algorithm");

        cmbAlgorithmType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MSRobin", "Comulative Binomial Probability" }));
        cmbAlgorithmType.setEnabled(false);

        javax.swing.GroupLayout pnlMatchingLayout = new javax.swing.GroupLayout(pnlMatching);
        pnlMatching.setLayout(pnlMatchingLayout);
        pnlMatchingLayout.setHorizontalGroup(
            pnlMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMatchingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAlgorithmType)
                .addGap(18, 18, 18)
                .addComponent(cmbAlgorithmType, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMatchingLayout.setVerticalGroup(
            pnlMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMatchingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlgorithmType)
                    .addComponent(cmbAlgorithmType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        prgSearchProgress.setForeground(new java.awt.Color(0, 102, 255));

        btnStartSearching.setText("Start Searching");
        btnStartSearching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartSearchingActionPerformed(evt);
            }
        });

        lblProgress.setText("0%");

        jLabel1.setText("Target Spectra");

        jScrollPane2.setViewportView(lstTargetSpectra);

        javax.swing.GroupLayout pnlLeftLayout = new javax.swing.GroupLayout(pnlLeft);
        pnlLeft.setLayout(pnlLeftLayout);
        pnlLeftLayout.setHorizontalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addGroup(pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlMatching, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlPreprocessing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(btnStartSearching, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(pnlLeftLayout.createSequentialGroup()
                        .addComponent(prgSearchProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblProgress)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlLeftLayout.setVerticalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(pnlPreprocessing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(pnlMatching, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnStartSearching)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addGroup(pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prgSearchProgress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProgress, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(38, 38, 38))
        );

        jSplitPane1.setLeftComponent(pnlLeft);

        jSplitPane2.setDividerLocation(401);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        pnlSimilarityResult.setBorder(javax.swing.BorderFactory.createTitledBorder("Top Six Similar Spectra"));
        pnlSimilarityResult.setMinimumSize(new java.awt.Dimension(30, 30));
        pnlSimilarityResult.setLayout(new java.awt.GridLayout(3, 3));
        jSplitPane2.setTopComponent(pnlSimilarityResult);

        pnllog.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout pnllogLayout = new javax.swing.GroupLayout(pnllog);
        pnllog.setLayout(pnllogLayout);
        pnllogLayout.setHorizontalGroup(
            pnllogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 726, Short.MAX_VALUE)
        );
        pnllogLayout.setVerticalGroup(
            pnllogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
        );

        jSplitPane2.setRightComponent(pnllog);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );

        jSplitPane1.setRightComponent(jPanel2);

        jMenu1.setText("File");

        jMenuItem2.setText("Open");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Save ");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem4.setText("Copy");
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Paste");
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem1.setText("About");
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartSearchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartSearchingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartSearchingActionPerformed

//    final Logger log=Logger.getLogger(MainView.class.getName());
//    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//
//                new MainView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApplyPreprocess;
    private javax.swing.JButton btnDBSpectra;
    private javax.swing.JButton btnStartSearching;
    private javax.swing.JButton btnTargetSpectra;
    private javax.swing.JCheckBox chkFilter;
    private javax.swing.JCheckBox chkRemovePrecursor;
    private javax.swing.JCheckBox chkTransform;
    private javax.swing.JComboBox<String> cmbAlgorithmType;
    private javax.swing.JComboBox<String> cmbTransformType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblAlgorithmType;
    private javax.swing.JLabel lblCutOff;
    private javax.swing.JLabel lblDatabaseSpectra;
    private javax.swing.JLabel lblFragmentTolerance;
    private javax.swing.JLabel lblPrecursorCharge;
    private javax.swing.JLabel lblPrecursorTolerance;
    private javax.swing.JLabel lblProgress;
    private javax.swing.JLabel lblTargetSpectra;
    private javax.swing.JList<String> lstTargetSpectra;
    private javax.swing.JPanel pnlInput;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlMatching;
    private javax.swing.JPanel pnlPreprocessing;
    private javax.swing.JPanel pnlSimilarityResult;
    private javax.swing.JPanel pnllog;
    private javax.swing.JProgressBar prgSearchProgress;
    private javax.swing.JTextField txtCutOff;
    private javax.swing.JTextField txtDBSpectra;
    private javax.swing.JTextField txtFragmentTolerance;
    private javax.swing.JTextField txtPrecursorCharge;
    private javax.swing.JTextField txtPrecursorTolerance;
    private javax.swing.JTextField txtTargetSpectra;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/main/resources/similarityIcon.png"));
        //this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("src/main/resources/similarityIcon.png")));
    }

    protected void colorTitlebar() {
        try {
//        // String name = UIManager.getSystemLookAndFeelClassName();
//         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//         UIManager.put("InternalFrame.activeTitleBackground", Color.getHSBColor(147, 106, 46));
//         UIManager.put("InternalFrame.activeTitleForeground", Color.getHSBColor(147, 106, 46));
//         UIManager.put("InternalFrame.inactiveTitleBackground", Color.green);
//         UIManager.put("InternalFrame.inactiveTitleForeground", Color.yellow);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
